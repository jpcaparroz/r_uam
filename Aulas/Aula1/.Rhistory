5+5
5+5
5+5-15
5+5
4-2
3*8
4/2
# Resto da divisão
5%%3
5/3
6/3
6%%3
# Divisão inteira
5%/%3
# Potenciar
5^3
a<- 324
log(a)
a<- 324
print(a)
print(a, nome, idade, peso, sexo)
print(a+ nome+ idade+ peso+ sexo)
nome<- "JP"
idade<- 23
peso<- 89.765
sexo<- "m"
print(a+ nome+ idade+ peso+ sexo)
# Definindo variavel
a<- 324
nome="JP"
idade= 23
peso<- 89.765
sexo<- "m"
print(nome)
# Definindo variavel
a<- 324
nome="JP"
idade= 23
peso<- 89.765
sexo<- "m"
print(nome + sexo)
print(paste(nome, " ", sexo))
class(idade)
class(idade)
mode(nome)
typeof(sexo)
sobrenome <- "Dias Caparroz"
# Ajuda com a função
?getwd
# Ajuda com a função
?setwd()
# Funções
dir()
setwd("C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Aulas/Aula1")
# Funções
dir()
ls()
ls()
?ls() #?
rm() # remover objeto da memória
rm(nome) # remover objeto da memória
gc() # garbage collector (remove variaveis não utilizadas)
as.character(9888) #transforma o numero em string
as.integer("999") #transforma a string em inteiro
as.numeric(898) #transforma numero em float
sobrenome <- "Dias Caparroz"
as.integer(sobrenome) #transforma a string em inteiro
as.integer(sobrenome) #transforma a string em inteiro
as.integer("111") #transforma a string em inteiro
computador <- scan()
computador <- scan()
computador <- scan()
print(paste("João ", sobrenome)) #concatenando string à variavel
vnumero[3]
# Vetores
vnumero <- c(1,2,3,4,5,6)
vnumero[3]
vnumero[-3]
vletras <- c('a','b', 'c')
vletras[2]
vletras[-2]
class(vletras)
vlogico[]
vlogico[!1]
vlogico[!FALSE]
vlogico[1]
vlogico <- c(!TRUE,!FALSE)
vlogico[1]
vnumero[vlogico]
vnumero <- c(6,5,4,3,2,1)
vnumero <- c(1,2,3,4,5,6)
vnumero2 <- c(6,5,4,3,2,1)
vnumero + vnumero2
vnumero - vnumero2
vSoma <- c(vnumero + vnumero2)
print(vSoma)
vnumero2 <- c(6,5,4,3,2,1)
# Vetores
vnumero <- c(1,2,3,4)
vnumero + vnumero2 #somando vetores de inteiros
vColunas["Nome"]
vPessoas <- c("João", "Caparroz")
vColunas(vPessoas) <- c("Nome", "Sobrenome")
vColunas(vPessoas) <- c("Nome", "Sobrenome")
vColunas(vPessoas) <- c("Nome", "Sobrenome")
vColunas(vPessoas) = c("Nome", "Sobrenome")
vPessoas = c("João", "Caparroz")
vColunas(vPessoas) = c("Nome", "Sobrenome")
vPessoa <- c("João", "Caparroz")
vColunas(vPessoa) <- c("Nome", "Sobrenome")
vPessoa <- c("João", "Caparroz")
names(vPessoa) <- c("Nome", "Sobrenome")
vColunas["Nome"]
vPessoa["Nome"]
# Coleções (Matriz)
v <- c(1:10)
matriz <- matrix(data = v, nrow = 2, ncol = 2)
# Coleções (Matriz)
v <- c(1:5)
matriz <- matrix(data = v, nrow = 5, ncol = 2)
matriz
names(matriz) <- c("Nome", "Sobrenome")
matriz
matriz <- matrix(data = v, nrow = 5, ncol = 2)
names(matriz) <- c(ncol(1)="Nome", "Sobrenome")
matriz <- ?matrix(data = v, nrow = 5, ncol = 2)
matriz <- matrix(data = v, nrow = 5, ncol = 2)
matrix()
?matrix()
matriz <- matrix(data = v, nrow = 5, ncol = 2)
matriz
matriz <- matrix(data = v, nrow = 5, ncol = 2, byrow = 1)
matriz
matriz[(2,3,4),1]
matriz[2:4,1]
matriz[>=2,1]
matriz[0>=2,1]
matriz[0>=2,1]
matriz[>2,1]
matriz[c(2,3,4),1]
mnum <- 1:3
diag(mnum)
t(matriz)
solve(matriz)
solve(1:4)
solve(4:4)
solve(3*3:4*5) #matriz quadrada (linhas == colunas)
solve(3:3) #matriz quadrada (linhas == colunas)
m1 <- matrix(2:4)
matrix
matrix
m1 <- matrix(2:4, nr=2)
m1 <- matrix(2:4, nr=3)
m1
m1 <- matrix(2:4, nr=3, nl=2)
m1 <- matrix(2:4, nr=3, nc=2)
m1
m2 <- matrix(6:8, nr=3, nc=2)
m2
m1 + m2
m1%*%m2
m2 <- matrix(6:8, nr=2, nc=2)
m1
m1 <- matrix(2:4, nr=2, nc=2) #criando matriz abreviando parametros
m1 <- matrix(2:4, nr=2, nc=2, byrow=1) #criando matriz abreviando parametros
m1 <- matrix(2:4, nr=2) #criando matriz abreviando parametros
m1 <- matrix(2:5, nr=2) #criando matriz abreviando parametros
m1
m2 <- matrix(6:9, nr=2)
m1%*%m2
m1
m2
dimnames(m1) <- list(c('LA1', 'LA2'), c('Homens', 'Mulheres'))
m1
m1["LA1"]
m1['Homens']
m1['LA','Homens']
m1['LA1','Homens']
rbind(m1, m2)
cbind(m1,m2)
