setwd('C:\Users\joao.caparroz\Documents\Eu\Pessoal\Faculdade\Curso em R\Aulas\Aula2')
setwd('C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Aulas/Aula2')
getwd()
# Lista bibliotecas instaladas
search()
install.packages('ggvis')
# Lista bibliotecas instaladas
search()
library(ggvis)
# Lista bibliotecas instaladas
search()
require(ggvis)
install.packages(c('dplyr',tidyr))
install.packages(c('dplyr','tidyr'))
install.packages(c("dplyr", "tidyr"))
library(c(dplyr,tidyr))
library(dplyr)
library(tidyr)
# Lista bibliotecas instaladas
search()
# Carregando em memória biblioteca (toda vez que abrir R, carregar)
library(ggvis)
# Lista bibliotecas instaladas
search()
# Verificando funções de uma biblioteca (ja carregada)
lsf.str('package:ggvis')
install.packages('ggplot')
library(ggplot)
install.packages('ggplot2')
library(ggplot2)
# Verificando funções de uma biblioteca (ja carregada)
lsf.str('package:ggplot2')
# Estrutura de controle: if
v <- 25
'Número maior'
# Estrutura de controle: if
v <- 20
'Número maior'
if(v>20){
'Número maior'
}
if(v>20){
'Número maior'
}
if(v>20){
'Número maior'
}
if(v>20){
print('Número maior')
}
# Estrutura de controle: if
v <- 25
if(v>20){
print('Número maior')
}
# Estrutura de controle: if
v <- 2
if(v>20){
print('Número maior')
}
if(v>20){
print('Número maior')
} else {
print('Número menor')
}
# Estrutura de controle: if
v <- 22
if(v>20){
print('Número maior')
} else {
print('Número menor')
}
print('Número menor')
if(v>20){
print('Número maior')
} else if(v==20) {
print('Número igual a 20')
}else{
print('Número menor')
}
# Estrutura de controle: if
v <- 20
if(v>20){
print('Número maior')
} else if(v==20) {
print('Número igual a 20')
}else{
print('Número menor')
}
# Estrutura de controle: if
v <- 19
if(v>20){
print('Número maior')
} else if(v==20) {
print('Número igual a 20')
}else{
print('Número menor')
}
# Estrutura de controle: if
v <- 20
# Operador ternário
ifelse(v%%2==0, 'Par', 'Impar')
# Estrutura de controle: if
v <- 21
# Operador ternário
ifelse(v%%2==0, 'Par', 'Impar')
# Laço de repetição
repeat(
v=v+1
if(v==50){
# Laço de repetição
repeat(
v <- v+1
if(v==50){
# Laço de repetição
repeat(
v <- v+1
if(v>50){
# Laço de repetição
repeat(
v <- v+1
if(v>50){
# Laço de repetição
repeat(
v <- v+1,
# Laço de repetição
repeat(
v <- v + 1
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
v <- v + 5
if(v>50){
repeat(
v <- v + 5
if(v>50){
# Laço de repetição
repeat(
print(concat('Contando: ',v))
)
print(i)
i <- 1
for(i in 1:20){
print(i)
}
i
i <- 1
for(i in 1:20){
ifelse(i%%2==0, 'Par', 'Impar')
}
for(i in 1:20){
ifelse(i%%2==0, 'Par', 'Impar')
}
for(i in 1:20){
ifelse(i%%2==0, print('Par'),print('Impar'))
}
# Laço de repetição
?repeat(
print(concat('Contando: ',v))
)
?repeat()
?repeat()
?repeat
# Laço de repetição
repeat{
v <- v + 1
if(v<50){
print(v)
}
}
# Laço de repetição
repeat{
v <- v + 1
if(v<50){
print(v)
}
}
# Laço de repetição
i <- 1
# Laço de repetição
i <- 0
for(i in 1:20){
if(i%%2==0){
print(paste(i,'contando..'))
}
}
# Laço de repetição
i <- 0
while(i<10){
i <- i + 1
print(i)
}
# Laço de repetição
i <- 0
for(i in 1:50){
i = i +
print(i)
}
i <- 0
for(i in 1:50){
i = i + i
print(i)
}
i <- 0
for(i in 1:50){
i = i + i
}
i
i <- 0
somatorio <- 0
soma <- 0
for(i in 1:50){
soma = soma + soma
}
soma
soma
soma <- 1
for(i in 1:50){
soma = soma + soma
}
soma
soma <- 1
for(i in 1:50){
soma = soma + i
}
soma <- 0
for(i in 1:50){
soma = soma + i
}
soma <- 0
for(i in 1:50){
if(i%%2==0){
soma = soma + 1
print(paste(i,'é par!'))
}
}
soma = soma + i
soma <- 0
for(i in 1:50){
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando..'))
}
}
for(i in 1:50){
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando.. (com nº pares)'))
}
}
soma <- 0
for(i in 1:50){
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando.. (com nº pares)'))
}
}
i <- 0
soma <- 0
while(i>50){
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando.. (com nº pares)'))
}
}
while(i>50){
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando.. (com nº pares)'))
}
}
while(i>50){
i += i
while(i>50){
i <- i + 1
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando.. (com nº pares)'))
}
}
while(i>50){
i <- i + 1
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando.. (com nº pares)'))
}
}
while(i<50){
i <- i + 1
if(i%%2==0){
soma = soma + i
print(paste(soma,'contando.. (com nº pares)'))
}
}
# Verificando argumentos de uma função
args(if)
# Verificando argumentos de uma função
args(if())
# Verificando argumentos de uma função
args(sample)
args(mean)
mean(1:50)
sample(x <- c(1:50), size <- 10)
# Valor absoluto (transforma tudo em positivo)
abs(-300)
# Soma
sum(c(1:50))
sum(1:50)
# Média
mean(1:50)
# Média
mean(c(1:50)
# Média
mean(c(1:50))
# Média
mean(c(1:50))
# Arredondamento
round(1:50)
# Arredondamento
round(mean(1:50))
# Invertendo conjunto
rev(c(1:25))
# Sequencia
seq(c(1:5))
seq
seq(1,7)
seq(7,1)
seq(1,5,2)
seq(25,5,5)
seq(25,5,5)
seq(25,5)
seq(25,5,2)
seq(5,25,2)
seq(5,25,5)
# Ordenar
veto c(seq(1,10))
# Ordenar
veto <-  c(seq(1,10))
veto
sort(veto)
# Ordenar
veto <-  c(5,3,25,64,6,2)
sort(veto)
# Adicionando elemento em vetor
append(veto,3,4,5,3)
# Adicionando elemento em vetor
append(veto,3,4)
sort(veto, decreasing = T)
rev(sort(veto))
# Criando funções
f <- function(x){
x + x
}
f(5)
ff <- function(x,y){
result <- x/y
return(result)
}
ff(5,2)
df <- data.frame(cbind(...))
return(df)
fd <- (...){
fd <- (...){
fd <- (...){
fd <- function(...){
df <- data.frame(cbind(...))
}
fd(1:25)
fd
fd <- function(...){
df <- data.frame(cbind(...))
return(df)
}
xy <- fd(1:50)
xy
v1 <- 1:5
v2 <- c('a','b','c')
xy <- fd(v1,v2)
xy
xy[v1]
xy[1]
# Calculando tempo de operações
system.time(t <- sum(1:50))
# Calculando tempo de operações
system.time(t <- sum(1:555550))
system.time(for(i in 1:50){
soma = soma + i
})
soma = 0
system.time(for(i in 1:50){
soma = soma + i
})
f <- function(x,y){
for(y in 1:50){
x = x + y
}
}
system.time(f(0,1))
system.time(t1 <- f(0,1))
f <- function(x,y){
for(y in 1:50){
x = x + y
}
return(x)
}
system.time(t1 <- f(0,1))
?system.time(t1 <- f(0,1))
