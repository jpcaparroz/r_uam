setwd(C:\Users\joao.caparroz\Documents\Eu\Pessoal\Faculdade\Curso em R\Aulas\Aula3)
setwd(C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Aulas/Aula3)
setwd("C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Aulas/Aula3")
## Fatores
vetor1 <- c(1001, 1002, 1003, 1004, 1005)
vetor2 <- c(0, 1, 1, 0, 2)
vetor3 <- c("Verde", "Laranja", "Azul", "Laranja", "Verde")
df <- data.frame(vetor1, vetor2, vetor3)
str(df)
#
df$vetor3 <- factor(df$vetor3)
# Verficia se alguma coluna do dataframe é fator
str(df)
df$categoria2 <- factor(df$vet2, labels = c("Divorciado", "Casado", "Solteiro"))
df$categoria2 <- factor(df$vetor2, labels = c("Divorciado", "Casado", "Solteiro"))
df
# Verficia se alguma coluna do dataframe é fator
str(df)
df2 <- data.frame(var1 <- c(1,2,3), var2 <- c('a', 'b', 'c'))
df2
view(df)
df(view)
df2$var2 <- factor(df2$var2, levels <- c('a', 'b', 'c'), labels <- c('Treatment A: XYZ', 'Treatment B: YZX', 'Treatment C: ZYX'))
View(df)
View(df2)
conjunto <- c('AA', 'BB', 'CA', 'AC', 'BA')
fatorOrder <- factor(conjunto, levels <- c('CA', 'BA', 'AA', 'BB', 'AC'), ordered <- T)
fatorOrder
is.ordered(fatorOrder)
fatorOrder <- factor(conjunto)
fatorOrder
class(fatorOrder)
fatorOrder <- factor(conjunto, levels <- c('CA', 'BA', 'AA', 'BB', 'AC'), ordered <- T)
fatorOrder
is.ordered(fatorOrder)
as.numeric(fatorOrder)
order(fatorOrder)
is.ordered(fatorOrder)
as.numeric(fatorOrder)
table(fatorOrder)
View(fatorOrder)
## Lendo arquivos
setwd('C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Aulas/Aula3')
getwd()
dir
dir()
iris <- read.csv('files/iris.csv')
View(iris)
dim(iris)
str(iris)
# Carregando arquivo já definindo strings como fator
iris2 <- read.csv('files/iris.csv', stringsAsFactors = T)
View(iris2)
dim(iris2)
str(iris2)
write.csv(iris2, 'files/iris2.csv')
# Para xlsx precisa de uma library nova
install.packages('readxl')
library(readxl)
# Lendo xlsx
excel_sheets('files/PopUrbana.xlsx')
xlsx <- 'files/PopUrbana.xlsx'
# Exibindo sheets dentro do xlsx
excel_sheets(xlsx)
# Lendo excel
read_excel(xlsx)
# Lendo excel por sheet
read_excel(xlsx, sheet = 'Period2')
read_excel(xlsx, sheet = 4)
read_excel(xlsx, sheet = 3)
read_excel(xlsx, sheet = 4)
# Lendo excel por sheet
read_excel(xlsx, sheet = 'Period2')
# Carregar xlsx em um datafram
df <- read_excel(xlsx, sheet = 3)
View(df)
## Gráficos
height <- c(145, 167, 176, 123, 150)
width <- c(51, 63, 64, 50, 55)
plot(height, width)
plot(lynx)
plot(height, width)
plot(height, width, ylab <- 'Altura',xlab <- 'Largura')
plot(height, width, ylab <- 'Altura',xlab <- 'Largura')
plot(height, width, ylab <- 'Altura',xlab <- 'Largura')
plot(lynx)
plot(height, width, ylab <- 'Altura',xlab <- 'Largura')
plot(height, width, ylab <- 'Altura',xlab <- 'Largura')
plot(lynx)
plot(height, width, ylab <- 'Altura',xlab <- 'Largura')
plot(height, width, ylab <- 'Altura',xlab <- 'Largura')
plot(lynx)
plot(height, width, ylab = 'Altura',xlab = 'Largura')
plot(height, width, main = 'Teste Gráfico' ylab = 'Altura',xlab = 'Largura')
plot(height, width, main = 'Teste Gráfico', ylab = 'Altura',xlab = 'Largura')
plot(height, width, main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'red')
plot(height, width, main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'pink')
plot(height, width, main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'pink',
col.main = 'blue')
plot(height, width, main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'pink',
col.main = 'blue',
cex.main = 1.2)
plot(height, width, main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'pink',
col.main = 'blue',
cex.main = 1.5)
plot(df, main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'pink',
col.main = 'blue',
cex.main = 1.5)
plot(df$country,df$1975, main = 'Teste Gráfico',
plot(df$country,df$country, main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'pink',
col.main = 'blue',
cex.main = 1.5)
plot(height, width,
type ='p',
main = 'Teste Gráfico',
ylab = 'Altura',xlab = 'Largura',
col = 'pink',
col.main = 'blue',
cex.main = 1.5)
plot(height, width,
type ='h',
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'pink', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
plot(height, width,
type ='s',
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'pink', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
width <- c(1:10)
## Gráficos
height <- c(5:50)
plot(height, width,
type ='s', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'pink', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
plot(height, width,
type ='s', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'pink', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
## Gráficos
height <- c(41:50)
plot(height, width,
type ='s', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'pink', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
plot(height, width,
type ='s', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'orange', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
plot(height, width,
type ='h', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'orange', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
plot(height, width,
type ='p', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'orange', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
plot(height, width,
type ='l', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'orange', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
## Gráficos
height <- c(40:50)
width <- c(0:10)
plot(height, width,
type ='l', # Tipo do gráfico - p,l,b,o,h,s,n
main = 'Teste Gráfico', # Titulo do gráfico
ylab = 'Altura',xlab = 'Largura', # Altura x Largura
col = 'orange', # Cor dos dados
col.main = 'blue', # Cor do titulo
cex.main = 1.5) # Tamanho do titulo
# Gráfico de dispersão
x <- rnorm(10,5,7)
y <- rpois(10,7)
z <- rnorm(10,6,7)
a <- rpois(10,9)
plot(x,y)
plot(x,y, col=123)
plot(x,y,
col=123,
pch = 10)
plot(x,y,
col = 123,
pch = 10,
main = 'Dipsersão')
plot(x,y,
col = 123,
pch = 10,
main = 'Dipsersão',
col.main = 'green')
plot(x,y,
type = 's',
col = 123,
pch = 10, # tamanho dos pontos do gráfico
main = 'Dipsersão',
col.main = 'green')
plot(x,y,
type = 'k',
col = 123,
pch = 10, # tamanho dos pontos do gráfico
main = 'Dipsersão',
col.main = 'green')
plot(x,y,
type = 'l',
col = 123,
pch = 10, # tamanho dos pontos do gráfico
main = 'Dipsersão',
col.main = 'green')
plot(x,y,
type = 'o',
col = 123,
pch = 10, # tamanho dos pontos do gráfico
main = 'Dipsersão',
col.main = 'green')
plot(x,y,
type = 'p',
col = 123,
pch = 10, # tamanho dos pontos do gráfico
main = 'Dipsersão',
col.main = 'green')
plot(x,y,
type = 'p',
cex = 2,
col = 123,
pch = 10, # tamanho dos pontos do gráfico
main = 'Dipsersão',
col.main = 'green')
# Box Plot
boxsplot(
data = sleep,
extra ~ group,
main = "Sono | BoxPlot",
col.main = 'red',
ylab = 'Horas',
xlab ='Drogas'
)
# Box Plot
attach(sleep)
boxsplot(
data = sleep,
extra ~ group,
main = "Sono | BoxPlot",
col.main = 'red',
ylab = 'Horas',
xlab ='Drogas'
)
boxplot(
data = sleep,
extra ~ group,
main = "Sono | BoxPlot",
col.main = 'red',
ylab = 'Horas',
xlab ='Drogas'
)
boxplot(
data = sleep, # Dados
extra ~ group$1, # Relacionando variaveis com ~
boxplot(
data = sleep, # Dados
extra ~ group, # Relacionando variaveis com ~
main = "Sono | BoxPlot",
col.main = 'red',
ylab = 'Horas',
xlab ='Drogas'
)
View(sleep)
summary(data$extra)
summary(sleep$extra)
