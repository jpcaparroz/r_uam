setwd('C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Aulas/Aula6')
getwd()
install.packages('TIDYR')
install.packages('tidyr')
dados <- data.frame(
Nome = c("Geografia", "Literatura", "Biologia"),
Regiao_A = c(97, 80, 84),
Regiao_B = c(86, 90, 91)
)
library(tidyr)
View(dados)
View(
dados %>%
gather(Regiao, NotaFinal, Regiao_A:Regiao_A)
)
View(
dados %>%
gather(Regiao, NotaFinal, Regiao_A:Regiao_B)
)
View(dados)
View(
dados %>%
spread(Nome,3,4)
)
View(
dados %>%
spread(Nome)
)
View(
dados %>%
spread(Nome,3,3)
)
View(
dados %>%
unite(Nome, Regiao_A,3)
)
df2 <- data.frame(
id = 1:4,
acao = sample(rep(c('controle', 'tratamento'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
dados2 <- data.frame(
id = 1:4,
acao = sample(rep(c('controle', 'tratamento'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
View(dados2)
View(
dados %>%
gather(key,time, work.T1, work.T2, home.T2)
)
View(
dados2 %>%
gather(key,time, work.T1, work.T2, home.T2)
)
View(
dados2 %>%
gather(key,time, work.T1,home.T1, work.T2, home.T2)
)
View(
dados2 %>%
gather(key,time, work.T1,home.T1, work.T2, home.T2) %>%
separate(key, into = c('localidade', 'tempo'), sep = '\\.')
)
dados3 <- data.frame(
participante = c("p1","p2","p3","p4", "p5", "p6"),
info = c("g1m","g1m","g1f","g2m","g2m", "g2m"),
day1score = rnorm(n = 6, mean = 80, sd = 15),
day2score = rnorm(n = 6, mean = 88, sd = 8)
)
View(dados3)
View(
dados3 %>%
gather(day,score, c(day1score,day2score))
)
View(
dados3 %>%
gather(day,score, c(day1score,day2score)) %>%
spread(day.score, c(day,score))
)
View(
dados3 %>%
gather(day,score, c(day1score,day2score)) %>%
spread(day.score, day,score))
View(
dados3 %>%
gather(day,score, c(day1score,day2score)) %>%
spread(day,score))
View(
dados3 %>%
gather(day,score, c(day1score,day2score)) %>%
spread(day,score)
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into c('group', 'gender'), sep = 2)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2)
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
sort(group, decreasing = FALSE)
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
sort('group', decreasing = FALSE)
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
sort(info, decreasing = FALSE)
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
sort()
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
sort
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
arrange()
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
arrange(group)
)
library(diplyr)
install.packages('diplyr')
library(diplyr)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
arrange(group)
)
library(diplyr)
install.packages('diplyr')
library(dplyr)
install.packages('dplyr')
install.packages("dplyr")
library(dplyr)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
arrange(group)
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
arrange(gender)
)
View(
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
arrange(gender) %>% #ordenando por coluna
unite(info_again, group, gender, sep='')
)
library(ggplot2)
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
ggplot(aes(x= day, y= score))
dados3 %>%
gather(day, score, c(day1score, day2score)) %>%
separate(col = info, into = c('group', 'gender'), sep = 2) %>%
ggplot(aes(x= day, y= score)) +
geom_point()+
facet_wrap(~group) +
geom_smooth(method = 'lm', aes(group = 1), se = F)
setwd('C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Aulas/Projeto')
getwd()
setwd('C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Projeto')
getwd()
# Libs
library(dply)
# Libs
library(dplyr)
library(ggplot2)
# Importando dataset de um arquivo
fileSource = 'C:/Users/joao.caparroz/Documents/Eu/Pessoal/Faculdade/Curso em R/Projeto/files/dataset.csv'
dados <- read.csv(fileSource)
View(dados)
str(dados)
summary(dados)
View(summary(dados))
# Verificando null's
sum(is.na(dados))
# Verificando null's
paste('Existem: ',sum(is.na(dados)), ' nulls no arquivo')
# Verificando linhas com dados completos
paste('Existem: ' sum(complete.cases(dados)), ' dados completos no arquivo')
# Verificando linhas com dados completos
paste('Existem: ', sum(complete.cases(dados)), ' dados completos no arquivo')
# Verificando % de completude dos dados
paste(sum(complete.cases(dados)/nrow(dados)*100, '% do arquivo está completo')
# Verificando % de completude dos dados
paste(sum(complete.cases(dados)/nrow(dados)*100, '% do arquivo está completo'))
# Verificando % de completude dos dados
paste(sum(complete.cases(dados))/nrow(dados)*100, '% do arquivo está completo')
# Verificando % de completude dos dados
paste(round(sum(complete.cases(dados))/nrow(dados)*100), '% do arquivo está completo')
# Renomeando colunas do arquivo
names(dados) <- c("Pais","Ano","Nivel_Vida", "PIB_Per_Capta", "Suporte_Social",
"Expectativa_Vida","Indice_Liberdade", "Indice_Generosidade",
"Percepcao_Corrupcao", "Emocoes_Positivas","Emocoes_Negativas" )
View(dados)
# Removendo nulls
dadosF <- na.omit(dados)
dim(dadosF)
complete.cases(dadosF)
sum(complete.cases(dadosF))
sum(complete.cases(dadosF))/nrow(dadosF)*100
paste(sum(complete.cases(dadosF))/nrow(dadosF)*100, '% do arquivo está completo')
# Quantidade de linhas por Pais
View(
table(dadosF$Pais)
)
# Quantidade de linhas por Pais
View(
table(dadosF$Pais) %>%
arrange(Pais)
)
table(dadosF$Pais) %>%
arrange(Pais)
# Quantidade de linhas por Pais
View(
sort(
table(dadosF$Pais),
decreasing = FALSE
)
)
# Quantidade de linhas por Pais
View(
sort(
table(dadosF$Pais),
decreasing = TRUE
)
)
View(
arrange(
table(dadosF$Pais)
)
)
# Quantidade de linhas por Pais
View(
sort(
table(dadosF$Ano),
decreasing = TRUE
)
)
# Removendo valores baixos
dadosF <- dadosF [
dadosF$Ano!=2005 &
dadosF$Ano!=2006 &
dadosF$Ano!=2007 &
dadosF$Ano!=2020,
]
# Quantidade de linhas por ano
View(
sort(
table(dadosF$Ano),
decreasing = TRUE
)
)
boxplot(dadosF$PIB_Per_Capta)
boxplot(dados$Expectativa_Vida)
ggplot(dadosF, aes(x=PIB_Per_Capta,
y=Expectativa_Vida)) +
geom_point()
ggplot(dadosF, aes(x=PIB_Per_Capta,
y=Expectativa_Vida)) +
geom_point() +
geom_smooth(method = 'lm')
cor.test(x = dadosF$PIB_Per_Capta,
y = dadosF$Expectativa_Vida)
# Corrupção x escala de vida
boxplot(dadosF$Percepcao_Corrupcao)
boxplot(dadosF$Nivel_Vida)
ggplot(dadosF, aes(x = Percepcao_Corrupcao,
y = Nivel_Vida))
ggplot(dadosF, aes(x = Nivel_Vida,
y = Percepcao_Corrupcao))
ggplot(dadosF, aes(x = Nivel_Vida,
y = Percepcao_Corrupcao)
geom_point())
ggplot(dadosF, aes(x = Nivel_Vida,
y = Percepcao_Corrupcao) +
geom_point())
ggplot(dadosF, aes(x = Nivel_Vida,
y = Percepcao_Corrupcao)) +
geom_point()
ggplot(dadosF, aes(x = Nivel_Vida,
y = Percepcao_Corrupcao)) +
geom_point(),
ggplot(dadosF, aes(x = Nivel_Vida,
y = Percepcao_Corrupcao)) +
geom_point() +
geom_smooth(method = 'lm')
cor.test(x = dadosF$Nivel_Vida,
y = dadosF$Percepcao_Corrupcao)
